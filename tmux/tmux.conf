# enable truecolor support in tmux
# ref: https://stackoverflow.com/questions/41783367/tmux-tmux-true-color-is-not-working-properly
set -g default-terminal 'screen-256color'
set -sa terminal-overrides ",*-256color*:Tc"

# enable ctrl-left/right to move cursor forward/back by word
set-window-option -g xterm-keys on

# get shift-pageup/pagedown working into copy-mode
bind -T copy-mode-vi S-Pageup send-keys -X page-up
bind -T copy-mode-vi S-Pagedown send-keys -X page-down
# shift-pageup will enter copy-mode if not on alt screen
bind -T root S-Pageup \
    if-shell -Ft= "#{alternate_on}" \
        "send-keys S-PPage" \
        "copy-mode -eu"
bind -T root S-Pagedown \
    if-shell -Ft= "#{alternate_on}" \
        "send-keys S-NPage"
# same logic for Pageup/Pagedown
bind -T root Pageup \
    if-shell -Ft= "#{alternate_on}" \
        "send-keys PPage" \
        "copy-mode -eu"
bind -T root Pagedown \
    if-shell -Ft= "#{alternate_on}" \
        "send-keys NPage"

# Emulate scrolling in programs that may not support mouse (less, man, etc)
# The mouse_any_flag is 1 when there is an app that accepts mouse events, it
# is 0 when in shell, info, or man.  The logic for the following two binds
# is essentially:
#   If in copy-mod or the underlying app accepts mouse events,
#      send them.  otherwise
#      if an alternate screen is active (ie. man / info),
#         send Up and Down keypresses to simulate scrolling, otherwise
#         enter copy-mode (-e means scrolling to the bottom exits copy-mode)
bind-key -n WheelUpPane \
    if-shell -F -t = "#{?pane_in_mode,1,#{mouse_any_flag}}" \
        "send-keys -M" \
        "if -Ft= '#{alternate_on}' \
            'send-keys Up Up Up' \
            'copy-mode -et='"

bind-key -n WheelDownPane \
    if-shell -F -t = "#{?pane_in_mode,1,#{mouse_any_flag}}" \
        "send-keys -M" \
        "if -Ft= '#{alternate_on}' \
            'send-keys Down Down Down'"

# prefix 'r' to reload config file
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf

# enable mouse mode (tmux 2.1 and above)
set -g mouse on

# set prefix to ctra-a
set -g prefix C-a
# for nested tmux sessions, use prefix 'a' to send it to inner tmux
bind a send-prefix

# create new windows in same directory
bind c new-window -c "#{pane_current_path}"
# window splitting with - (horizontal) and | (verticle), in same directory
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1
# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1
# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 65536
# keybinding to clear history
bind C-k clear-history \; display-message "history cleared"

# C-b ! breaks current pane into separate window, so we'll bind @ to
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# vim key bindings for pane movement
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# history/scrollback vi bindings
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi "v" send -X begin-selection
bind -T copy-mode-vi "V" send -X rectangle-toggle
bind -T copy-mode-vi "y" send -X copy-selection-and-cancel

# easy resizing of panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# enable auto updating titles of the terminal and window
set -g set-titles on
set-window-option -g automatic-rename on
set -g set-titles-string '[#W]#T'

# load a status.conf if available
if-shell "[ -f $XDG_CONFIG_HOME/tmux/status.conf ]" \
    'source $XDG_CONFIG_HOME/tmux/status.conf'

